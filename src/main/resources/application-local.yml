server:
  port: 8001
spring:
  application:
    name: test-microservice
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: latest
      group-id: cfr-overdue-group
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: fr.test.test.compute.config.kafka.KafkaEventDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: fr.test.test.compute..config.kafka.KafkaEventSerializer
      properties:
        interceptor.classes: fr.bpifrance.cfr.compute.kafka.logging.interceptor.KafkaLoggingProducerInterceptor
  data:
    mongodb:
      uri: mongodb://localhost:27011,localhost:27012,localhost:27013/cfr-ms-overdue-db?replicaSet=rs0
bpi:
  kafka:
    topic:
      payment: payment_topic
      receipt: receipt_topic
    group-id: kafka-group
management:
  metrics:
    export:
      datadog:
        api-key: DATADOG_API_KEY
